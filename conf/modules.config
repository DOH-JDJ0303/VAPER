/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'PREPARE_REFS' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/refs" }
        ]
    }
    withName: 'FASTQC' {
        ext.args            = "--quiet"
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/qc" }
        ]
    }
    withName: 'FASTP' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/trmd_reads" }
        ]
    }
    withName: 'SHOVILL' {
        ext.args            = "--assembler ${params.assembler} --mincov ${params.min_contig_cov} --minlen ${params.min_contig_len} --gsize ${params.gsize}"
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/assembly" },
            pattern: "contigs.fa",
            saveAs: { "${meta.id}.fa" }

        ]
    }
    withName: 'FASTP2TBL' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/qc/" }
        ]
    }
    withName: 'KRAKEN2' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/taxonomy/" }
        ]
    }
    withName: 'MINIMAP2_ALIGN' {
        ext.args            = "-x asm20 --secondary=no"
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/taxonomy/" }
        ]
    }
    withName: 'SUMMARIZE_TAXA' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/taxonomy/" }
        ]
    }
    withName: 'BWA_MEM' {
        ext.args            = ""
        ext.when            = {  }
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/assembly/" },
                pattern: "*.bam",
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${meta.id}/qc" },
                pattern: "*.txt",
                mode: 'copy'
            ]
        ]
    }
    withName: 'SAMTOOLSTATS2TBL' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/qc/" }
        ]
    }
    withName: 'MAPPED_FASTQ' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/assembly/" },
            pattern: "*.gz"
        ]
    }
    withName: 'IVAR_CONSENSUS' {
        ext.args            = ""
        ext.when            = {  }
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/assembly/" },
                pattern: "*.fa",
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${meta.id}/qc" },
                pattern: "*.csv",
                mode: 'copy'
            ]
        ]
    }
    withName: 'SUMMARYLINE' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/${meta.id}/" }
        ]
    }
    withName: 'COMBINE_SUMMARYLINES' {
        ext.args            = ""
        ext.when            = {  }
        publishDir          = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/" }
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
